{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sUAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UCqHOC,G,iNAhDXC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAKbC,U,sBAAY,8BAAAC,EAAA,sEAE+BC,IAAMC,IAAI,4DAFzC,gBAEaJ,EAFb,EAEHK,KAAQA,KAAQL,OACvB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAHzB,2C,mFAWVQ,KAAKN,c,+BAEG,IAAD,EACqBM,KAAKT,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,gBAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAOa,EAAMC,GACbA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GA/DZuB,IAAMC,YC1DxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.ee831658.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\n/* props 예제\nfunction Movie({ iden ,name, rating}){\n  return <div>\n    <h1>I like {name} </h1>\n    <h2>{iden}</h2>\n    <h4>{rating}/5.0</h4>\n  </div>;\n}\n\nconst MovieArray = [\n  { id : 1 , \n    name : \"SpiderMan\",\n    rating : 5\n  },\n  { id : 2 , \n    name : \"Avengers\",\n    rating : 4.9\n  },\n  { id : 3 , \n    name : \"Thor\",\n    rating : 4.8\n  },\n  { id : 4 , \n    name : \"IronMan\",\n    rating : 4.7\n  }\n];\n\n// 이름은 무조건 propTypes로 해야함\n\nMovie.propTypes = {\n  name : PropTypes.string.isRequired,\n  iden : PropTypes.number.isRequired,\n  rating : PropTypes.number.isRequired\n}; \n\n\n// 이걸 function component라 부름\nfunction App() {\n  return <div className=\"App\">\n            <h1>Hello</h1>\n            {\n            // !! 자바스크립트 넣을 땐 {} 안에 넣음\n            //  <Movie name=\"spiderMan\" />\n            // <Movie name=\"Avengers\" />\n            // <Movie name=\"IronMan\" />\n            // <Movie name=\"Thor\" /> \n            // 이걸 한줄로 하면\n             MovieArray.map(MovieName => <Movie key = {MovieName.id} iden = {MovieName.id} name = {MovieName.name} rating = {MovieName.rating} />)\n           }\n          </div>;\n}\n\n*/\n\n// class component\n\nclass App extends React.Component{\n  /* class component 설명\n  state = {\n    count : 0\n  };\n  // react코드가 아닌 javascript코드, const add를 쓰지 않는 이유는 class이기 때문\n  // setState를 쓰면 react는 state를 re-render함\n  add = () => {\n    // {count : this.state.count + 1 }은 좋은 코드가 아님. 외부 state 에 의존\n    // current => ({count : current.count +  1}) 로 대체. 외부에 의존x\n    this.setState(current => ({count : current.count +  1}));\n  };\n  minus = () => {\n    // 좋지 않은 코드\n    this.setState({count : this.state.count - 1});\n  };\n  render() {\n    return <div>\n      <h1>the number is : {this.state.count}</h1>\n      <button onClick={this.add}>Add</button>\n      <button onClick={this.minus}>Minus</button>\n    </div>;\n  } ;\n  */\n \n    state = {\n      isLoading : true,\n      movies : []\n    };\n\n  // async > 이 함수를 기다려라. 함수 안에서 뭘 기다려야 하는지 await로 말해줌. 이걸 하지 않으면 javascript는 function을 기다려주지 않을것\n  \n  getMovies = async () => {\n    // axios.get은 완료되기 까지 좀 시간이 필요해 async와 await사용\n    const {data : {data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading :false })\n    \n  }\n  // 처음 render를 하면 호출되는 life cycle method\n  componentDidMount() {\n    // setTimeout(() => {\n    //   this.setState({isLoading : false})\n    // }, 6000)\n    this.getMovies();\n  }\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? ( \n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading... </span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie \n                key = {movie.id} \n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n            />\n          ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('potato'));\n\n "],"sourceRoot":""}